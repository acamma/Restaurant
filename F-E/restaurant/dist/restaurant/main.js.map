{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authentication.guard.ts","webpack:///./src/app/authentication.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/models/login-user-data.ts","webpack:///./src/app/orders.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { AuthenticationGuard } from './authentication.guard';\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"/login\", pathMatch: \"full\" },\n  { path: \"login\", component: LoginComponent },\n  { path: \"menu\", component: MenuComponent, canActivate: [AuthenticationGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Restaurant</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/menu\\\" routerLinkActive=\\\"active\\\">Menu</a>\\n      </li>\\n    </ul>\\n    <ul class=\\\"navbar-nav\\\">\\n      <a class=\\\"nav-link\\\" style=\\\"cursor:pointer\\\" *ngIf=\\\"auth.loggedIn()\\\" (click)=\\\"logout()\\\">Logout</a>\\n    </ul>\\n  </div>\\n</nav>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { AuthenticationService } from './authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private auth: AuthenticationService, private router: Router) { }\n\n  logout() {\n    this.auth.logoutUser().subscribe(\n      numrows => {\n        if (numrows) {\n          localStorage.removeItem(\"tableId\");\n          this.router.navigate([\"/login\"]);\n        } else {\n          alert(\"Error while loggin out\");\n        }\n      },\n      error => alert(error)\n    );\n  }\n}\n","import { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    MenuComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AuthenticationService } from './authentication.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationGuard implements CanActivate {\n  constructor(private auth: AuthenticationService, private router: Router) { }\n\n  canActivate(): boolean {\n    if (this.auth.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate([\"/login\"]);\n      return false;\n    }\n  }\n}\n","import { Table } from './models/table';\nimport { catchError, tap } from 'rxjs/operators';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private loginrUrl = \"http://localhost:8090/restaurantServer/login\";\n  private logoutrUrl = \"http://localhost:8090/restaurantServer/logout/\";\n\n  constructor(private http: HttpClient) { }\n\n  loginUser(userData): Observable<Table> {\n    return this.http.post<Table>(this.loginrUrl, userData).pipe(\n      catchError(this.errorHandler));\n  }\n\n  loggedIn(): boolean {\n    return !!localStorage.getItem(\"tableId\");\n  }\n\n  logoutUser(): Observable<number> {\n    let id = localStorage.getItem(\"tableId\");\n    return this.http.get<number>(this.logoutrUrl + id).pipe(\n      catchError(this.errorHandler));\n  }\n\n  errorHandler(error: HttpErrorResponse) {\n    return throwError(error.message || \"Server Error!\");\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row pt-5\\\">\\n  <div class=\\\"col-md-6 mx-auto\\\">\\n    <div class=\\\"card roundend-0\\\">\\n      <div class=\\\"card-header\\\">\\n        <h3 class=\\\"mb-0\\\">Login</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form class=\\\"form\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">Username</label>\\n            <input [(ngModel)]=\\\"loginUserData.username\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control rounded-0\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">Password</label>\\n            <input [(ngModel)]=\\\"loginUserData.password\\\" name=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control rounded-0\\\" required>\\n          </div>\\n          <button (click)=\\\"loginUser()\\\" type=\\\"button\\\" class=\\\"btn btn-success float-right\\\">Login</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { LoginUserData } from '../models/login-user-data';\nimport { AuthenticationService } from './../authentication.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginUserData = new LoginUserData();\n  constructor(private auth: AuthenticationService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  loginUser() {\n    this.auth.loginUser(this.loginUserData).subscribe(\n      res => {\n        console.log(res);\n        this.router.navigate([\"/menu\"]);\n        localStorage.setItem(\"tableId\", String(res.tableId));\n      },\n      error => alert(error)\n    );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- <p *ngIf=\\\"menu\\\">{{menu.entries()}}</p> -->\\n<div *ngFor=\\\"let category of categories\\\">\\n  <h2>{{category.name}}</h2>\\n  <ul *ngFor=\\\"let product of menu.get(category)\\\">\\n    <li>{{product.name}}</li>\\n  </ul>\\n</div>\\n\"","import { OrdersService } from './../orders.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Category } from '../models/category';\nimport { Product } from '../models/product';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  menu: Map<Category, Product[]>;\n  categories: Category[];\n\n  constructor(private ord: OrdersService) { }\n\n  ngOnInit() {\n    this.getMenu();\n  }\n\n  getMenu() {\n    this.ord.getMenu().subscribe(\n      res => {\n        console.log(res);\n        this.menu = res;\n        for (let [key, value] of this.menu) {\n          this.categories.push(key);\n        }\n        // this.menu.forEach((prod, cat) => {\n        //   // this.categories.push(cat);\n        //   console.log(cat + \" \" + this.menu[1]);\n        // });\n      },\n      error => alert(error)\n    );\n  }\n}\n","export class LoginUserData {\n  username: string;\n  password: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError, Observable } from 'rxjs';\nimport { Product } from './models/product';\nimport { Category } from './models/category';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  private getMenurUrl = \"http://localhost:8090/restaurantServer/menu\";\n\n  constructor(private http: HttpClient) { }\n\n  getMenu(): Observable<Map<Category, Product[]>> {\n    return this.http.get<Map<Category, Product[]>>(this.getMenurUrl).pipe(\n      catchError(this.errorHandler));\n  }\n\n  errorHandler(error: HttpErrorResponse) {\n    return throwError(error.message || \"Server Error!\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}